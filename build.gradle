import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.9.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    // io.confluent 패키지를 위한 maven 주소
    maven {
        url "https://packages.confluent.io/maven"
    }
}

// avro 설정
avro {
    stringType = "CharSequence"
    outputCharacterEncoding = "UTF-8"
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor 'com.querydsl:querydsl-apt'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // apache kafka
    implementation 'org.apache.kafka:kafka-streams'

    // avro
    implementation 'org.apache.avro:avro:1.12.0'
    implementation 'io.confluent:kafka-streams-avro-serde:7.8.0'

    // mongodb
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    // test embedded mongodb
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.18.1'

    // h2 for test
    testImplementation 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl
// gradle 8 버전에서는 $buildDir이 deprecated되었기 때문에
// 다음과 같은 코드를 사용한다.
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

sourceSets {
    main.java.srcDirs += [querydslDir]
}

clean {
    delete file(querydslDir)
}
